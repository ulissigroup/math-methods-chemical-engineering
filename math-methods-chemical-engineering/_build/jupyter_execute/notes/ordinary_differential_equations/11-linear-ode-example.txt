import numpy as np
import matplotlib.pyplot as plt

F = 1
V = 1
k = 1
omega = 1
Cf = 2
C0 = 4

alpha = (F+k*V)/V

t = np.linspace(0,30,500)

C = F/V*Cf*(1/alpha + \
            (alpha*np.sin(omega*t)-omega*np.cos(omega*t))/(alpha**2+omega**2)) + \
            (C0-F/V*Cf*(1/alpha-omega/(alpha**2+omega**2)))*np.exp(-alpha*t)

plt.plot(t,C)
plt.xlabel('Time')
plt.ylabel('Concentration C [mol/L]')
plt.xlim([0,30])
plt.ylim([0,4])

alpha

omega

import numpy as np
import matplotlib.pyplot as plt

def solve_C(t, 
            V = 1, 
            F = 1, 
            k = 1, 
            omega = 1, 
            Cf = 2, 
            C0 = 4):
  
  # This function evaluates the solution for a CSTR with a time-varying 
  # sinusoidal feed concentration
  
  alpha = (F+k*V)/V

  C = F/V*Cf*(1/alpha + \
            (alpha*np.sin(omega*t)-omega*np.cos(omega*t))/(alpha**2+omega**2)) + \
            (C0-F/V*Cf*(1/alpha-omega/(alpha**2+omega**2)))*np.exp(-alpha*t)
  return C


t = np.linspace(0,10,500)

plt.plot(t,solve_C(t=t, C0=1), label='$C_0=1$') 
plt.plot(t,solve_C(t=t, C0=2), label='$C_0=2$') 
plt.plot(t,solve_C(t=t, C0=4), label='$C_0=4$') 

plt.xlabel('Time')
plt.ylabel('Concentration C [mol/L]')
plt.xlim([0,10])
plt.ylim([0,4])
plt.legend()


t = np.linspace(0,10,500)

plt.plot(t,solve_C(t=t, omega=0.5), label='$\omega=0.5$') 
plt.plot(t,solve_C(t=t, omega=1), label='$\omega=1$') 
plt.plot(t,solve_C(t=t, omega=2), label='$\omega=2$') 
plt.plot(t,solve_C(t=t, omega=100), label='$\omega=2$') 

plt.xlabel('Time')
plt.ylabel('Concentration C [mol/L]')
plt.xlim([0,10])
plt.ylim([0,4])
plt.legend()


t = np.linspace(0,10,500)

plt.plot(t,solve_C(t=t, Cf=0.5), label='$C_F=0.5$') 
plt.plot(t,solve_C(t=t, Cf=1), label='$C_F=1$') 
plt.plot(t,solve_C(t=t, Cf=2), label='$C_F=2$') 

plt.xlabel('Time')
plt.ylabel('Concentration C [mol/L]')
plt.xlim([0,10])
plt.ylim([0,4])
plt.legend()



