import numpy as np
import matplotlib.pyplot as plt

L=1 #m
alpha = 0.1 #m^2/s
lambdan = alpha*(np.pi/L)**2

x = np.linspace(0,L,100)

T0 = 5*np.sin(np.pi*x/L)
plt.plot(x,T0, '--', label='Initial Temperature in the Bar')
plt.xlabel('x [m]')
plt.ylabel('Temperature [K]')
plt.legend()

t = 10  #s
T = 5*np.exp(-lambdan*t)*np.sin(np.pi*x/L)

plt.plot(x, T, label='Full Solution at t=%1.2f'%t)
plt.legend()


import numpy as np
import matplotlib.pyplot as plt

from matplotlib import animation, rc
from IPython.display import HTML

# First set up the figure, the axis, and the plot element we want to animate
fig, ax = plt.subplots()
plt.close()

ax.plot(x,T0,'--',label='Initial Temp Profile')

ax.set_xlim(( -0.5, 1.5))
ax.set_ylim((0, 5))
ax.set_xlabel('x')
ax.set_ylabel('Temperature [K]')
line, = ax.plot([], [], lw=2, label='Temperature Profile')
ax.legend()

# initialization function: plot the background of each frame
def init():
    line.set_data([], [])
    return (line,)

# animation function. This is called sequentially  
def animate(i):

  T = 5*np.exp(-lambdan*t[i])*np.sin(np.pi*x/L)
  line.set_data(x, T)
  return (line,)
  
t = np.linspace(0,3,100)

anim = animation.FuncAnimation(fig, animate, init_func=init,
                             frames=100, interval=100, blit=True)

# Note: below is the part which makes it work on Colab
rc('animation', html='jshtml')
anim
  

import numpy as np
import matplotlib.pyplot as plt

L=1 #m
alpha=0.1 #m^2/s
T0 = 5

x = np.linspace(0, L, 200)

plt.plot(x,T0*np.ones(x.shape),'--',label='Initial Temp Profile')

t = 1 #initial profile
T = np.zeros(len(x))
for n in range(1,5):
  if n%2==1:
    cn=4*T0/np.pi/n
  else:
    cn=0
  lambdan=alpha*(n*np.pi/L)**2
  T=T+cn*np.exp(-lambdan*t)*np.sin(np.pi*n*x/L)

plt.plot(x,T,label='Solution at t=%1.2f'%t)
plt.legend()
ax.set_xlabel('x')
ax.set_ylabel('Temperature [K]')


import numpy as np
import matplotlib.pyplot as plt

from matplotlib import animation, rc
from IPython.display import HTML


L=1 #m
alpha=0.1 #m^2/s
lambdan=alpha*(np.pi/L)**2
T0 = 5

x = np.linspace(0, L, 200)

# First set up the figure, the axis, and the plot element we want to animate
fig, ax = plt.subplots()
plt.close()

T0 = 5*np.ones(x.shape)
ax.plot(x,T0,'--',label='Initial Temp Profile')

ax.set_xlim(( -0.5, 1.5))
ax.set_ylim((0, 6))
ax.set_xlabel('x')
ax.set_ylabel('Temperature [K]')
line, = ax.plot([], [], lw=2, label='Temperature Profile')
ax.legend()

# initialization function: plot the background of each frame
def init():
    line.set_data([], [])
    return (line,)

# animation function. This is called sequentially  
def animate(i):
  T = np.zeros(len(x))
  for n in range(1,200):
    if n%2==1:
      cn=4*T0/np.pi/n
    else:
      cn=0
    lambdan=alpha*(n*np.pi/L)**2
    T=T+cn*np.exp(-lambdan*t[i])*np.sin(np.pi*n*x/L)
    
  line.set_data(x, T)
  return (line,)
  
t = np.linspace(0,3,100)

anim = animation.FuncAnimation(fig, animate, init_func=init,
                             frames=100, interval=100, blit=True)

# Note: below is the part which makes it work on Colab
rc('animation', html='jshtml')
anim
  


